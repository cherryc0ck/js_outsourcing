1. 수량>10문제(order.html)
input type을 number로 설정해 0~10 범위에서 1씩 증가,감소하게 설정하였지만 
키보드로 범위밖의 숫자를 입력했을경우 그대로 입력되는 문제가 있어ex)수량 11, 12

타입이 number인 input(수량)에 onkeyup이벤트를 줘서 수량칸에서 키보드가 눌릴때마다
calculate(27000, 12,this.value)함수를 실행시키고 3가지의 파라미터를 전달해줍니다.
여기서 this.value는 이벤트가 발생될때의 input.value 즉 수량이므로 
함수에서 if조건문을 썼고 수량이 10 이상일때 alert창을띄우게하였습니다
그리고 event가 발생한 태그의 value값을 0으로 설정해주고 
forEach문을통해 합계의 value값도 0으로 설정해주었습니다.

2. button 비활성화문제(order.html)
초기화버튼과 주문하기 버튼이 disabled속성을 가지고있어 클릭이안되는 문제를
disabled속성을 삭제하여 활성화시켰습니다.

3. 초기화기능(order.html)
초기화버튼을 클릭했을때 모든 수량과 합계가 0으로 초기화되게끔 기능구현하였습니다.

쿼리셀렉터를 이용하여 초기화버튼을 변수로 설정해주었고 
초기화버튼에 클릭이벤트를 설정해주어 클릭되었을때 clear라는 함수가 실행되게끔 하였습니다.
clear라는 함수는 
forEach문으로 모든 인풋(type=text, type=number)의 value, 즉 값을 0으로 설정해줍니다.

4. 총 주문금액(order.html)
총 주문금액 버튼을 클릭했을때 수량을 체크한 도서들의 합계를 모두 더한 최종금액을 표시하게해줬습니다.

쿼리셀렉터를 이용하여 '총주문금액' 버튼을 변수로 설정해주었고
버튼에 클릭이벤트를 설정해주어 클릭되었을때 order()라는 함수가 실행됩니다.
order라는 함수는
먼저 orderSum이라는 변수를 선언과 동시에 초기화를해주고
forEach문으로 합계에 해당하는 input의 value값을 orderSum에 누적합니다.
이후 forEach문이 끝나면 orderSum의 값을 innerHTML으로 넣어줍니다.

